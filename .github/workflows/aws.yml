name: Deploy AudioTextify to AWS EC2

on:
  push:
    branches:
      - dev # Deploy when changes are pushed to the dev branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies and set up virtual environment
        run: |
          if [ ! -d "AudioTextify/venv" ]; then
            python -m venv AudioTextify/venv
          fi
          source AudioTextify/venv/bin/activate
          pip install --upgrade pip
          pip install -r AudioTextify/requirements.txt

      - name: Decode PEM file from base64
        run: |
          echo ${{secrets.PEM_FILE_BASE64}} | base64 -d > ec2-key.pem
          chmod 400 ec2-key.pem

      - name: Copy files to EC2
        run: |
          scp -i ${{ secrets.PEM_FILE }} -r ./AudioTextify/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }}:/home/${{ secrets.EC2_USER }}/AudioTextify

      - name: SSH into EC2 and Deploy
        run: |
          ssh -i ${{ secrets.PEM_FILE }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} << 'EOF'
          cd /home/${{ secrets.EC2_USER }}/AudioTextify
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          source venv/bin/activate
          pip3 install --upgrade pip
          pip3 install -r requirements.txt
          # Stop existing FastAPI and Streamlit processes (optional)
          pkill -f "fastapi dev app.py" || true
          pkill -f "streamlit" || true
          # Run FastAPI
          nohup fastapi dev app.py &  # Adjust this command based on your setup
          EOF
